var config={api:{main:{root:"http://t-avihavai.users.cs.helsinki.fi/cb-back/app/"}},view:{container:"#container"},editor:{configure:function(a){a.setReadOnly(!0),a.setPrintMarginColumn(!1),a.setDisplayIndentGuides(!1),a.getSession().setFoldStyle("markbeginend"),a.setTheme("ace/theme/crimson_editor"),a.setFontSize(12),a.getSession().setTabSize(4),a.getSession().setUseWrapMode(!0),a.getSession().setWrapLimitRange(120,120)}}};$(document).ready(function(){codebrowser.initialize()});var codebrowser={app:{},helper:{},model:{},collection:{},view:{},router:{},initialize:function(){codebrowser.app.base=new codebrowser.router.BaseRouter,codebrowser.app.snapshot=new codebrowser.router.SnapshotRouter,Backbone.history.start()}};codebrowser.helper.AceMode={mode:{java:"java"},getModeForFilename:function(a){var b="text";if(-1!==a.indexOf(".")&&0!==a.indexOf(".")){var c=a.split("."),d=c[c.length-1];b=this.mode[d]||b}return"ace/mode/"+b}},codebrowser.model.Course=Backbone.RelationalModel.extend({urlRoot:config.api.main.root+"courses",relations:[{type:Backbone.HasMany,key:"exercises",relatedModel:"codebrowser.model.Exercise",collectionType:"codebrowser.collection.ExerciseCollection",reverseRelation:{key:"course"}}]}),codebrowser.model.Exercise=Backbone.RelationalModel.extend({urlRoot:function(){return this.get("course").urlRoot+"/"+this.get("course").id+"/exercises"}}),codebrowser.model.File=Backbone.RelationalModel.extend({urlRoot:function(){return config.api.main.root+"students/"+this.get("snapshot").get("studentId")+"/courses/"+this.get("snapshot").get("courseId")+"/exercises/"+this.get("snapshot").get("exerciseId")+"/snapshots/"+this.get("snapshot").id+"/files"},fetchContent:function(a){var b=$.get(this.urlRoot()+"/"+this.id+"/content",function(b){a(b,null)});b.fail(function(){a(null,b)})}}),codebrowser.model.Snapshot=Backbone.RelationalModel.extend({urlRoot:function(){if(!this.get("studentId")||!this.get("courseId")||!this.get("exerciseId"))throw new Error("Attributes studentId, courseId and exerciseId are required to fetch a snapshot.");return config.api.main.root+"students/"+this.get("studentId")+"/courses/"+this.get("courseId")+"/exercises/"+this.get("exerciseId")+"/snapshots"},relations:[{type:Backbone.HasMany,key:"files",relatedModel:"codebrowser.model.File",collectionType:"codebrowser.collection.FileCollection",reverseRelation:{key:"snapshot"}}],convertTime:function(){if(this.get("snapshotTime")){var a=this.get("snapshotTime");this.set("snapshotTime",new Date(a).toLocaleString())}}}),codebrowser.model.Student=Backbone.RelationalModel.extend({urlRoot:config.api.main.root+"students",relations:[{type:Backbone.HasMany,key:"courses",relatedModel:"codebrowser.model.Course",collectionType:"codebrowser.collection.CourseCollection"}]}),codebrowser.collection.CourseCollection=Backbone.Collection.extend({model:codebrowser.model.Course,url:config.api.main.root+"courses"}),codebrowser.collection.ExerciseCollection=Backbone.Collection.extend({model:codebrowser.model.Exercise,url:function(){return this.course.urlRoot+"/"+this.course.id+"/exercises"}}),codebrowser.collection.FileCollection=Backbone.Collection.extend({model:codebrowser.model.File,url:function(){return config.api.main.root+"students/"+this.snapshot.get("studentId")+"/courses/"+this.snapshot.get("courseId")+"/exercises/"+this.snapshot.get("exerciseId")+"/snapshots/"+this.snapshot.id+"/files"}}),codebrowser.collection.SnapshotCollection=Backbone.Collection.extend({model:codebrowser.model.Snapshot,url:function(){if(!this.studentId||!this.courseId||!this.exerciseId)throw new Error("Options studentId, courseId and exerciseId are required to fetch snapshots.");return config.api.main.root+"students/"+this.studentId+"/courses/"+this.courseId+"/exercises/"+this.exerciseId+"/snapshots"},initialize:function(a,b){b&&(this.studentId=b.studentId,this.courseId=b.courseId,this.exerciseId=b.exerciseId)}}),codebrowser.collection.StudentCollection=Backbone.Collection.extend({model:codebrowser.model.Student,url:config.api.main.root+"students"}),codebrowser.view.EditorView=Backbone.View.extend({render:function(a,b){var c=$("#editor-template").html(),d=Handlebars.compile(c);d=d(this.model.toJSON()),this.$el.html(d),this.editor=ace.edit("editor"),config.editor.configure(this.editor),this.setContent(a,b)},setModel:function(a){this.model=a,this.update()},update:function(){var a=this;this.model.fetchContent(function(b){var c=a.model.get("name"),d=codebrowser.helper.AceMode.getModeForFilename(c);a.render(b,d)})},setContent:function(a,b){this.editor.setValue(a),this.editor.navigateFileStart(),this.editor.getSession().setMode(b)}}),codebrowser.view.ErrorView=Backbone.View.extend({render:function(){$(this.el).empty(),$("<br/>").appendTo(this.el),$("<h1/>").text("You didn't find what you were looking for, now good day.").appendTo(this.el)}}),codebrowser.view.SnapshotView=Backbone.View.extend({events:{"click #previous":"previous","click #next":"next"},initialize:function(){this.model=new codebrowser.model.Snapshot,this.render(),this.editorView=new codebrowser.view.EditorView({el:"#editor-container"})},render:function(){var a=$("#snapshot-template").html(),b=Handlebars.compile(a);b=b(this.model.toJSON()),this.$el.html(b)},setModel:function(a){this.model=a,this.model.convertTime(),this.render(),this.editorView.setModel(this.model.get("files").at(0))},previous:function(a){var b=this.collection.indexOf(this.model),c=this.collection.at(b-1);this.navigate(c.id),a.preventDefault()},next:function(a){var b=this.collection.indexOf(this.model),c=this.collection.at(b+1);this.navigate(c.id),a.preventDefault()},navigate:function(a){codebrowser.app.snapshot.navigate("#/students/"+this.collection.studentId+"/courses/"+this.collection.courseId+"/exercises/"+this.collection.exerciseId+"/snapshots/"+a)},configURLs:function(){for(var a=0;a<this.model.get("files").length;++a){var b=this.model.get("files").at(a);b.set("url","#/students/"+this.collection.studentId+"/courses/"+this.collection.courseId+"/exercises/"+this.collection.exerciseId+"/snapshots/"+this.model.id+"/files/"+b.get("id"))}}}),codebrowser.router.BaseRouter=Backbone.Router.extend({initialize:function(){this.errorView=new codebrowser.view.ErrorView({el:config.view.container})},routes:{"*notFound":"catch"},"catch":function(){this.errorView.render(),console.log("Catched!")}}),codebrowser.router.SnapshotRouter=Backbone.Router.extend({routes:{"students/:studentId/courses/:courseId/exercises/:exerciseId/snapshots/:id":"snapshot"},initialize:function(){this.snapshotView=new codebrowser.view.SnapshotView({el:"#snapshot-container"})},snapshot:function(a,b,c,d){var e=new codebrowser.collection.SnapshotCollection(null,{studentId:a,courseId:b,exerciseId:c});this.snapshotView.collection=e;var f=this;e.fetch({success:function(){var a=e.get(d);return a?(f.snapshotView.setModel(a),void 0):(f.navigate("#/error"),void 0)},error:function(){console.log("Request failed.")}})}});