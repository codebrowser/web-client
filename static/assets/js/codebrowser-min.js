var config={api:{main:{root:"http://t-avihavai.users.cs.helsinki.fi/cb-back/app/"}},view:{container:"#container"},editor:{configure:function(e){e.setReadOnly(!0),e.setPrintMarginColumn(!1),e.setDisplayIndentGuides(!1),e.getSession().setFoldStyle("markbeginend"),e.setTheme("ace/theme/crimson_editor"),e.setFontSize(12),e.getSession().setTabSize(4),e.getSession().setUseWrapMode(!0),e.getSession().setWrapLimitRange(120,120)}}};$(document).ready(function(){codebrowser.initialize()});var codebrowser={app:{},helper:{},model:{},collection:{},view:{},router:{},initialize:function(){codebrowser.app.base=new codebrowser.router.BaseRouter,codebrowser.app.snapshot=new codebrowser.router.SnapshotRouter,Backbone.history.start()}};codebrowser.helper.AceMode={mode:{java:"java"},getModeForFilename:function(e){var o="text";if(-1!==e.indexOf(".")&&0!==e.indexOf(".")){var t=e.split("."),s=t[t.length-1];o=this.mode[s]||o}return"ace/mode/"+o}},codebrowser.model.Course=Backbone.RelationalModel.extend({urlRoot:config.api.main.root+"courses",relations:[{type:Backbone.HasMany,key:"exercises",relatedModel:"codebrowser.model.Exercise",collectionType:"codebrowser.collection.ExerciseCollection",reverseRelation:{key:"course"}}]}),codebrowser.model.Exercise=Backbone.RelationalModel.extend({urlRoot:function(){return this.get("course").urlRoot+"/"+this.get("course").id+"/exercises"}}),codebrowser.model.File=Backbone.RelationalModel.extend({urlRoot:function(){return config.api.main.root+"students/"+this.get("snapshot").get("studentId")+"/courses/"+this.get("snapshot").get("courseId")+"/exercises/"+this.get("snapshot").get("exerciseId")+"/snapshots/"+this.get("snapshot").id+"/files"},fetchContent:function(e){var o=$.get(this.urlRoot()+"/"+this.id+"/content",function(o){e(o,null)});o.fail(function(){e(null,o)})}}),codebrowser.model.Snapshot=Backbone.RelationalModel.extend({urlRoot:function(){if(!this.get("studentId")||!this.get("courseId")||!this.get("exerciseId"))throw Error("Attributes studentId, courseId and exerciseId are required to fetch a snapshot.");return config.api.main.root+"students/"+this.get("studentId")+"/courses/"+this.get("courseId")+"/exercises/"+this.get("exerciseId")+"/snapshots"},relations:[{type:Backbone.HasMany,key:"files",relatedModel:"codebrowser.model.File",collectionType:"codebrowser.collection.FileCollection",reverseRelation:{key:"snapshot"}}],convertTime:function(){if(this.get("snapshotTime")){var e=this.get("snapshotTime");this.set("snapshotTime",new Date(e).toLocaleString())}}}),codebrowser.model.Student=Backbone.RelationalModel.extend({urlRoot:config.api.main.root+"students",relations:[{type:Backbone.HasMany,key:"courses",relatedModel:"codebrowser.model.Course",collectionType:"codebrowser.collection.CourseCollection"}]}),codebrowser.collection.CourseCollection=Backbone.Collection.extend({model:codebrowser.model.Course,url:config.api.main.root+"courses"}),codebrowser.collection.ExerciseCollection=Backbone.Collection.extend({model:codebrowser.model.Exercise,url:function(){return this.course.urlRoot+"/"+this.course.id+"/exercises"}}),codebrowser.collection.FileCollection=Backbone.Collection.extend({model:codebrowser.model.File,url:function(){return config.api.main.root+"students/"+this.snapshot.get("studentId")+"/courses/"+this.snapshot.get("courseId")+"/exercises/"+this.snapshot.get("exerciseId")+"/snapshots/"+this.snapshot.id+"/files"}}),codebrowser.collection.SnapshotCollection=Backbone.Collection.extend({model:codebrowser.model.Snapshot,url:function(){if(!this.studentId||!this.courseId||!this.exerciseId)throw Error("Options studentId, courseId and exerciseId are required to fetch snapshots.");return config.api.main.root+"students/"+this.studentId+"/courses/"+this.courseId+"/exercises/"+this.exerciseId+"/snapshots"},initialize:function(e,o){o&&(this.studentId=o.studentId,this.courseId=o.courseId,this.exerciseId=o.exerciseId)}}),codebrowser.collection.StudentCollection=Backbone.Collection.extend({model:codebrowser.model.Student,url:config.api.main.root+"students"}),codebrowser.view.EditorView=Backbone.View.extend({render:function(e,o){var t=Mustache.render($("#editor-template").html(),this.model.toJSON());$("#editor-container").html(t),this.editor=ace.edit("editor"),config.editor.configure(this.editor),this.setContent(e,o)},setModel:function(e){this.model=e,this.update()},update:function(){var e=this;this.model.fetchContent(function(o){var t=e.model.get("name"),s=codebrowser.helper.AceMode.getModeForFilename(t);e.render(o,s)})},setContent:function(e,o){this.editor.setValue(e),this.editor.navigateFileStart(),this.editor.getSession().setMode(o)}}),codebrowser.view.SnapshotView=Backbone.View.extend({events:{"click #previous":"previous","click #next":"next"},initialize:function(){this.model=new codebrowser.model.Snapshot,this.render(),this.editorView=new codebrowser.view.EditorView({el:$("#editor-container")})},render:function(){var e=Mustache.render($("#snapshot-template").html(),this.model.toJSON());$(this.el).html(e)},setModel:function(e){this.model=e,this.model.convertTime(),this.render(),this.editorView.setModel(this.model.get("files").at(0))},previous:function(e){var o=this.collection.indexOf(this.model),t=this.collection.at(o-1);this.navigate(t.id),e.preventDefault()},next:function(e){var o=this.collection.indexOf(this.model),t=this.collection.at(o+1);this.navigate(t.id),e.preventDefault()},navigate:function(e){codebrowser.app.snapshot.navigate("#/students/"+this.collection.studentId+"/courses/"+this.collection.courseId+"/exercises/"+this.collection.exerciseId+"/snapshots/"+e)},configURLs:function(){for(var e=0;this.model.get("files").length>e;++e){var o=this.model.get("files").at(e);o.set("url","#/students/"+this.collection.studentId+"/courses/"+this.collection.courseId+"/exercises/"+this.collection.exerciseId+"/snapshots/"+this.model.id+"/files/"+o.get("id"))}}}),codebrowser.router.BaseRouter=Backbone.Router.extend({routes:{"*notFound":"catcha"},catcha:function(){$(config.view.container).empty(),console.log("Catched!")}}),codebrowser.router.SnapshotRouter=Backbone.Router.extend({routes:{"students/:studentId/courses/:courseId/exercises/:exerciseId/snapshots/:id":"snapshot"},initialize:function(){this.snapshotView=new codebrowser.view.SnapshotView({el:$(config.view.container)})},snapshot:function(e,o,t,s){var i=new codebrowser.collection.SnapshotCollection(null,{studentId:e,courseId:o,exerciseId:t});this.snapshotView.collection=i;var n=this;i.fetch({success:function(){var e=i.get(s);n.snapshotView.setModel(e)},error:function(){console.log("Request failed.")}})}});